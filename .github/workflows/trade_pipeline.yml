name: Trade Pipeline

# Trigger on push to trades/ or .github/assets/
on:
  push:
    paths:
      - 'trades/**'
      - 'index.directory/SFTi.Tradez/**'
      - 'index.directory/assets/sfti.tradez.assets/**'
      - 'index.directory/Informational.Bookz/**'
      - 'index.directory/SFTi.Notez/**'
      - '.github/assets/**'
      - '.github/scripts/**'
      - '.github/workflows/trade_pipeline.yml'
  workflow_dispatch:

# Permissions for GitHub Pages deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  process-trades:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml matplotlib
      
      - name: Install image optimization tools
        run: |
          sudo apt-get update
          sudo apt-get install -y optipng jpegoptim
      
      - name: Sanitize filenames for Jekyll compatibility
        run: |
          echo "Checking for files with problematic characters (colons, asterisks)..."
          # Find and report any files with colons in their names (excluding hidden directories)
          if find . -type f -name "*:*" ! -path "./.git/*" ! -path "./.github/*" 2>/dev/null | grep -q .; then
            echo "Warning: Found files with colons in their names:"
            find . -type f -name "*:*" ! -path "./.git/*" ! -path "./.github/*" 2>/dev/null
            echo "These files will be excluded by Jekyll configuration."
          else
            echo "No problematic filenames found. All clear!"
          fi
      
      - name: Parse trades into JSON index
        run: |
          echo "Step 1: Parsing trades..."
          python .github/scripts/parse_trades.py
      
      - name: Generate books index
        run: |
          echo "Step 2: Generating books index..."
          python .github/scripts/generate_books_index.py
      
      - name: Generate notes index
        run: |
          echo "Step 3: Generating notes index..."
          python .github/scripts/generate_notes_index.py
      
      - name: Generate summaries
        run: |
          echo "Step 4: Generating summaries..."
          python .github/scripts/generate_summaries.py
      
      - name: Generate index
        run: |
          echo "Step 5: Generating master index..."
          python .github/scripts/generate_index.py
      
      - name: Generate charts
        run: |
          echo "Step 6: Generating charts..."
          python .github/scripts/generate_charts.py
      
      - name: Update homepage
        run: |
          echo "Step 7: Updating homepage..."
          python .github/scripts/update_homepage.py
      
      - name: Optimize images
        run: |
          echo "Step 8: Optimizing images..."
          bash .github/scripts/optimize_images.sh
      
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      
      - name: Commit generated files
        run: |
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update: Process trades and generate charts [skip ci]"
            git push
          fi
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trade-data
          path: |
            index.directory/trades-index.json
            index.directory/books-index.json
            index.directory/notes-index.json
            index.directory/assets/charts/
            index.directory/all-trades.html

  deploy-pages:
    needs: process-trades
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      
      - name: Pull latest changes
        run: |
          git pull origin ${{ github.ref_name }}
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./_site
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
